[{"/Users/ali/Desktop/projects/chat-pwa/src/index.js":"1","/Users/ali/Desktop/projects/chat-pwa/src/App.js":"2","/Users/ali/Desktop/projects/chat-pwa/src/PrivateRoute.js":"3","/Users/ali/Desktop/projects/chat-pwa/src/components/Chat.js":"4","/Users/ali/Desktop/projects/chat-pwa/src/components/MessageInput.js":"5","/Users/ali/Desktop/projects/chat-pwa/src/components/UserListItem.js":"6","/Users/ali/Desktop/projects/chat-pwa/src/components/MessageListItem.js":"7","/Users/ali/Desktop/projects/chat-pwa/src/util/getDate.js":"8","/Users/ali/Desktop/projects/chat-pwa/src/serviceWorkerRegistration.js":"9","/Users/ali/Desktop/projects/chat-pwa/src/containers/RegisterContainer.js":"10","/Users/ali/Desktop/projects/chat-pwa/src/context/Auth.js":"11","/Users/ali/Desktop/projects/chat-pwa/src/containers/LoginContainer.js":"12","/Users/ali/Desktop/projects/chat-pwa/src/containers/ChatContainer.js":"13","/Users/ali/Desktop/projects/chat-pwa/src/components/Register.js":"14","/Users/ali/Desktop/projects/chat-pwa/src/Notifications.js":"15","/Users/ali/Desktop/projects/chat-pwa/src/config/firebase.js":"16","/Users/ali/Desktop/projects/chat-pwa/src/components/Login.js":"17","/Users/ali/Desktop/projects/chat-pwa/src/components/DrawerContent.js":"18","/Users/ali/Desktop/projects/chat-pwa/src/components/ChatMessages.js":"19","/Users/ali/Desktop/projects/chat-pwa/src/components/CreateChat.js":"20"},{"size":289,"mtime":1611768974403,"results":"21","hashOfConfig":"22"},{"size":997,"mtime":1611768974396,"results":"23","hashOfConfig":"22"},{"size":509,"mtime":1611600176226,"results":"24","hashOfConfig":"22"},{"size":4698,"mtime":1611782545838,"results":"25","hashOfConfig":"22"},{"size":1602,"mtime":1611768974400,"results":"26","hashOfConfig":"22"},{"size":473,"mtime":1611600176227,"results":"27","hashOfConfig":"22"},{"size":1362,"mtime":1611600176227,"results":"28","hashOfConfig":"22"},{"size":272,"mtime":1611600176229,"results":"29","hashOfConfig":"22"},{"size":5242,"mtime":1611600176228,"results":"30","hashOfConfig":"22"},{"size":1548,"mtime":1611778959747,"results":"31","hashOfConfig":"22"},{"size":649,"mtime":1611786456566,"results":"32","hashOfConfig":"22"},{"size":1529,"mtime":1611785145062,"results":"33","hashOfConfig":"22"},{"size":4160,"mtime":1611771411897,"results":"34","hashOfConfig":"22"},{"size":3898,"mtime":1611601157757,"results":"35","hashOfConfig":"22"},{"size":2129,"mtime":1611790474715,"results":"36","hashOfConfig":"22"},{"size":1026,"mtime":1611790337534,"results":"37","hashOfConfig":"22"},{"size":3430,"mtime":1611768974400,"results":"38","hashOfConfig":"22"},{"size":5245,"mtime":1611768974399,"results":"39","hashOfConfig":"22"},{"size":3004,"mtime":1611783705927,"results":"40","hashOfConfig":"22"},{"size":2201,"mtime":1611768974398,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"p8z2rv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"/Users/ali/Desktop/projects/chat-pwa/src/index.js",[],["86","87","88","89","90"],"/Users/ali/Desktop/projects/chat-pwa/src/App.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/PrivateRoute.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/Chat.js",["91"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\nimport { NotificationsActive, NotificationsNone } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatMessages from './ChatMessages';\nimport MessageInput from './MessageInput';\nimport DrawerContent from './DrawerContent';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100vw',\n    height: '100vh',\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  appBarIcons: {\n    marginLeft: 'auto',\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  chat: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    padding: '10px',\n  },\n  content: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  input: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  notification: {\n    marginRight: 20,\n  },\n}));\n\nfunction Chat({\n  user,\n  rooms,\n  mobileOpen,\n  handleDrawerToggle,\n  showCreate,\n  setShowCreate,\n  signOut,\n  notify,\n  notificationsOn,\n  notificationsOff,\n  searchWord,\n  setSearchWord,\n  searchResults,\n  setRoom,\n  messages,\n  input,\n  setInput,\n  sendMessage,\n  el,\n}) {\n  const classes = useStyles();\n\n  const AVATAR =\n    'https://i.pinimg.com/originals/0a/dd/87/0add874e1ea0676c4365b2dd7ddd32e3.jpg';\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div className={classes.appBarIcons}>\n            <IconButton\n              className={classes.notification}\n              color=\"inherit\"\n              aria-label=\"notification\"\n              edge=\"start\"\n              onClick={notify ? notificationsOff : notificationsOn}\n            >\n              {notify ? <NotificationsActive /> : <NotificationsNone />}\n            </IconButton>\n            <IconButton\n              className={classes.exit}\n              color=\"inherit\"\n              aria-label=\"sign-out\"\n              edge=\"start\"\n              onClick={signOut}\n            >\n              <ExitIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <DrawerContent\n        user={user}\n        rooms={rooms}\n        mobileOpen={mobileOpen}\n        handleDrawerToggle={handleDrawerToggle}\n        showCreate={showCreate}\n        setShowCreate={setShowCreate}\n        searchWord={searchWord}\n        setSearchWord={setSearchWord}\n        searchResults={searchResults}\n        setRoom={setRoom}\n      />\n      <div className={classes.chat}>\n        <main ref={el} className={classes.content}>\n          <div className={classes.toolbar} />\n          {messages &&\n            messages.map((message, i) => {\n              return (\n                <ChatMessages\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={message.userId + i}\n                  side={message.userId === user.uid ? 'right' : 'left'}\n                  message={{ message, index: i }}\n                  messages={messages}\n                  userHasChanged={\n                    i !== 0 && messages[i].userId !== messages[i - 1].userId\n                  }\n                  userGoingToChange={\n                    i !== messages.length - 1 &&\n                    messages[i].userId !== messages[i + 1].userId\n                  }\n                />\n              );\n            })}\n        </main>\n        <MessageInput\n          input={input}\n          setInput={setInput}\n          sendMessage={sendMessage}\n          className={classes.input}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","/Users/ali/Desktop/projects/chat-pwa/src/components/MessageInput.js",["92"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/SendRounded';\nimport AttachIcon from '@material-ui/icons/AttachFileOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: '30px',\n  },\n  input: {\n    padding: '5px 10px',\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function MessageInput({ input, setInput, sendMessage }) {\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Type a message ...\"\n        inputProps={{ 'aria-label': 'type-a-message' }}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={(e) => (e.key === 'Enter' ? sendMessage(e) : null)}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={(e) => sendMessage(e)}\n      >\n        <SendIcon />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"directions\"\n      >\n        <AttachIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","/Users/ali/Desktop/projects/chat-pwa/src/components/UserListItem.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/MessageListItem.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/util/getDate.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/serviceWorkerRegistration.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/containers/RegisterContainer.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/context/Auth.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/containers/LoginContainer.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/containers/ChatContainer.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/Register.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/Notifications.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/config/firebase.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/Login.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/DrawerContent.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/ChatMessages.js",[],"/Users/ali/Desktop/projects/chat-pwa/src/components/CreateChat.js",[],["93","94","95","96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":91,"column":9,"nodeType":"110","messageId":"111","endLine":91,"endColumn":15},{"ruleId":"108","severity":1,"message":"112","line":10,"column":31,"nodeType":"110","messageId":"111","endLine":10,"endColumn":36},{"ruleId":"98","replacedBy":"113"},{"ruleId":"100","replacedBy":"114"},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","replacedBy":"117"},"lines-around-directive",["118"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'AVATAR' is assigned a value but never used.","Identifier","unusedVar","'theme' is defined but never used.",["118"],[],[],[],[],"padding-line-between-statements"]